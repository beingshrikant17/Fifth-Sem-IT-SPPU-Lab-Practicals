---------------------------------------------------
NAME: Pawar Shrikant Sanjeev
TEIT
Roll no. : 57
DAA - Assignment no. 3
---------------------------------------------------


-----------------------------------
code:
-----------------------------------
package daa_Assignments;
import java.util.Arrays;
import java.util.Scanner;

public class Assignment3 
{
	static int N=0;

	public static boolean isSafe(int row, int col, char[][] board) 
	{
	       //horizontal
	       for(int j=0; j<board.length; j++) 
	       {
	           if(board[row][j] == 'Q') 
	           {
	               return false;
	           }
	       }
	  
	       //vertical
	       for(int i=0; i<board.length; i++) 
	       {
	           if(board[i][col] == 'Q') 
	           {
	               return false;
	           }
	       }
	      
	       //upper left
	       int r = row;
	       for(int c=col; c>=0 && r>=0; c--, r--) 
	       {
	           if(board[r][c] == 'Q')
	           {
	               return false;
	           }
	       }
	      
	       //upper right
	       r = row;
	       for(int c=col; c<board.length && r>=0; r--, c++) 
	       {
	           if(board[r][c] == 'Q')
	           {
	               return false;
	           }
	       }
	      
	       //lower left
	       r = row;
	       for(int c=col; c>=0 && r<board.length; r++, c--) 
	       {
	           if(board[r][c] == 'Q')
	           {
	               return false;
	           }
	       }
	      
	       //lower right
	       for(int c=col; c<board.length && r<board.length; c++, r++) 
	       {
	           if(board[r][c] == 'Q')
	           {
	               return false;
	           }
	       }
	      
	       return true;
	   }
	  
	   public static void saveBoard(char[][] board)
	   {
		   for (int i = 0; i < N; i++) 
			{
				for (int j = 0; j < N; j++)
				{
					System.out.print(" " + board[i][j]+ " ");
				}     
				System.out.println();
			}
		   System.out.println("\n\n");
	   }
	  
	   public static void helper(char[][] board,int col) 
	   {
	       if(col == board.length) 
	       {
	           saveBoard(board);
	           return;
	       }
	      
	       for(int row=0; row<board.length; row++) 
	       {
	           if(isSafe(row, col, board)) 
	           {
	               board[row][col] = 'Q';
	               helper(board, col+1);
	               board[row][col] = '.';
	           }
	       }
	   }
	
	public static void main(String[] args)
	{
		Scanner Sc=new Scanner(System.in);
    	while(true)
    	{
        	System.out.print("Enter no of Queens : \t");
             N = Sc.nextInt();
             if(N==198)
                 break;
            if(N==2 || N==3 || N==0 || N<0)
            {
            	System.out.println("\nSolution Not exists\n");
            }
            else
            {
            	char[][] mat = new char[N][N];
                for (int i = 0; i < N; i++) 
                {
                    Arrays.fill(mat[i], '.');
                }
                helper(mat, 0);
            }
           
    	}
    	Sc.close();	
	}
}

-----------------------------------
output:
-----------------------------------

Enter no of Queens : 	4
 .  .  Q  . 
 Q  .  .  . 
 .  .  .  Q 
 .  Q  .  . 



 .  Q  .  . 
 .  .  .  Q 
 Q  .  .  . 
 .  .  Q  . 



Enter no of Queens : 	3

Solution Not exists

Enter no of Queens : 	2

Solution Not exists

Enter no of Queens : 	1
 Q 



Enter no of Queens : 	5
 Q  .  .  .  . 
 .  .  .  Q  . 
 .  Q  .  .  . 
 .  .  .  .  Q 
 .  .  Q  .  . 



 Q  .  .  .  . 
 .  .  Q  .  . 
 .  .  .  .  Q 
 .  Q  .  .  . 
 .  .  .  Q  . 



 .  .  Q  .  . 
 Q  .  .  .  . 
 .  .  .  Q  . 
 .  Q  .  .  . 
 .  .  .  .  Q 



 .  .  .  Q  . 
 Q  .  .  .  . 
 .  .  Q  .  . 
 .  .  .  .  Q 
 .  Q  .  .  . 



 .  Q  .  .  . 
 .  .  .  Q  . 
 Q  .  .  .  . 
 .  .  Q  .  . 
 .  .  .  .  Q 



 .  .  .  .  Q 
 .  .  Q  .  . 
 Q  .  .  .  . 
 .  .  .  Q  . 
 .  Q  .  .  . 



 .  Q  .  .  . 
 .  .  .  .  Q 
 .  .  Q  .  . 
 Q  .  .  .  . 
 .  .  .  Q  . 



 .  .  .  .  Q 
 .  Q  .  .  . 
 .  .  .  Q  . 
 Q  .  .  .  . 
 .  .  Q  .  . 



 .  .  .  Q  . 
 .  Q  .  .  . 
 .  .  .  .  Q 
 .  .  Q  .  . 
 Q  .  .  .  . 



 .  .  Q  .  . 
 .  .  .  .  Q 
 .  Q  .  .  . 
 .  .  .  Q  . 
 Q  .  .  .  . 



Enter no of Queens : 	

------------------------------------------